# Claude CLI Configuration
CLAUDE_CLI_PATH=claude

# Gemini CLI Configuration
# Gemini CLI must be installed and authenticated
# Install: npm install -g @google/gemini-cli
# Authenticate: gemini auth login
GEMINI_CLI_PATH=gemini

# Gemini Model Configuration
GEMINI_MODEL=gemini-2.5-pro

# API Configuration
# If API_KEY is not set, server will prompt for interactive API key protection on startup
# Leave commented out to enable interactive prompt, or uncomment to use a fixed API key
# API_KEY=your-optional-api-key-here
PORT=8000

# Timeout Configuration (milliseconds)
MAX_TIMEOUT=600000

# CORS Configuration
CORS_ORIGINS=["*"]

# Progress Indicator Configuration
# Progress indicators are controlled per-request by using model names with suffixes:
# -chat: Standard mode (no progress markers)
# -chat-progress: Standard mode with streaming progress indicators
# Example: claude-3-5-sonnet-20241022-chat-progress

# Session Cleanup
# Set to false to disable automatic Claude Code session cleanup
# When disabled, sessions will appear in Claude's /resume command
CLEANUP_SESSIONS=true

# Cleanup delay in minutes (default: 720 = 12 hours)
# Sessions are tracked and cleaned up after this delay
# Set to 0 for immediate cleanup after request completion
# Note: Claude Code tracks token usage per session. For accurate usage monitoring,
# sessions should persist long enough to capture complete usage data.
# 12 hours ensures sessions span daily usage boundaries for better tracking.
CLEANUP_DELAY_MINUTES=720

# SSE Keep-alive Configuration
# Interval in seconds between SSE keepalive comments to prevent connection timeouts
# These are invisible comments (lines starting with ':') that keep the connection alive
SSE_KEEPALIVE_INTERVAL=30

# ============================================
# WARMUP CONFIGURATION (Eliminate cold starts)
# ============================================

# Warmup strategy for eliminating first request latency
# Options: none, periodic, persistent, adaptive
# - none: No warming (default behavior, 5-10s first request)
# - periodic: Refresh cache at regular intervals
# - persistent: Keep Node.js process always running (uses ~50MB RAM)
# - adaptive: Switch between periodic/persistent based on load (recommended)
PREWARM_STRATEGY=adaptive

# How often to refresh the cache (seconds)
# Lower = more frequent warming, higher = less resource usage
PREWARM_REFRESH_SECONDS=30

# Request rate threshold to switch to persistent mode (requests/minute)
# Only used with adaptive strategy
PREWARM_PERSISTENT_THRESHOLD=10

# Stop warming after this many seconds of inactivity
# Saves resources during idle periods
PREWARM_IDLE_TIMEOUT=300

# Skip CLI verification on startup (speeds up server start)
# The verification itself causes a cold start that doesn't help subsequent requests
SKIP_CLI_VERIFICATION=true

# Rate Limiting Configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=30
RATE_LIMIT_CHAT_PER_MINUTE=10
RATE_LIMIT_DEBUG_PER_MINUTE=2
RATE_LIMIT_AUTH_PER_MINUTE=10
RATE_LIMIT_SESSION_PER_MINUTE=15
RATE_LIMIT_HEALTH_PER_MINUTE=30

# XML Detection Configuration
# Confidence threshold for XML detection (default: 5.0)
# Higher values = fewer false positives, lower values = more sensitive
# Range: 1.0-10.0, recommended: 5.0-7.0
XML_CONFIDENCE_THRESHOLD=5.0

# Known XML tools for improved detection (comma-separated list)
# These tool names will be detected in messages to trigger XML format enforcement
# Leave empty to disable tool-based detection
# Common tools for Roo/Cline: attempt_completion,ask_followup_question,read_file,write_to_file,run_command
XML_KNOWN_TOOLS=attempt_completion,ask_followup_question,read_file,write_to_file,run_command,str_replace_editor,search_files,list_files,new_task,apply_diff,execute_command,switch_mode,update_todo_list